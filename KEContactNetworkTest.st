'From Pharo6.0 of 13 May 2016 [Latest update: #60528] on 29 July 2018 at 11:36:46.419485 pm'!TestCase subclass: #KEContactNetworkTest	instanceVariableNames: ''	classVariableNames: ''	poolDictionaries: ''	category: 'Kendrick-Tests-Spatial-Core'!!KEContactNetworkTest methodsFor: 'tests' stamp: 'nguyentienthanh 7/29/2018 23:29'!testAverageContact	"self new testAverageContact"	|model network|	model := KEModel new population: (KEPopulation size: 100).	network := KEContactNetwork nodes: 100 topology: { #random. #p->1 }.	model addAttribute: #node value: network allContacts.	model addAttribute: #network value: {network}.		self assert: (network averageContact) equals: 99	! !!KEContactNetworkTest methodsFor: 'as yet unclassified' stamp: 'BuiThiMaiAnh 7/11/2016 10:37'!testContactsOf	|model network|	model := KEModel new population: (KEPopulation size: 100).	network := KEContactNetwork nodes: 100 topology: { #random. #p->1 }.	model addAttribute: #node value: network allContacts.	model addAttribute: #network value: {network}.	1 to: 100 do: [ :i| model atCompartment: { #node->(i asString asSymbol). #network->network } put: 1 ].	model currentCompartment: (Dictionary newFrom: {#node->#'1'. #network->network}).	self assert: (network contactsOf: {model. #node->#'1'}) equals: 99	! !